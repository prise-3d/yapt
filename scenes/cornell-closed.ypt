# YAPT scene file
# this is a comment. Most things are comments
# YAPT directives are two-lines constructs
#
# the first line declares the type and name of the entity to add to the engine
# the second line specifies the entity to add to the engine
# for instance:
#
# ---- example below
# material: red
# lambertian = .65, .05, .05
# ---- example above
#
# declares a new material named "red"
# as a lambertian material with an RGB albedo of (0.65, 0.05, 0.05)
#
#
# type declarations are specified like this:
# [type]:name
#
# YAPT types:
#    material declares a new material
#    object   declares a new object primitive
#    scene    adds primitives to the scene
#    lights   adds lights to the importance sampling system
#
# material specifications:
# lambertian = r, g, b    declares a lambertian material and its RGB albedo
# difflight = r, g, b     declares an emissive, diffuse material and its RGB albedo
# metal = r, g, b         declares a metallic material and its RGB albedo
# dielectric = r          declares a dielectric material and its refraction index r
# isotropic = r, g, b     declares an isotropic participating media and its density
# composite = n1 - n2 - r declares a composite material behaving like material with name n1 with probability r, n2 otherwise
#
# object specifications:
# quad = x, y, z - ux, uy, uz - vx, vy, vz - mat   declares a quad ranging from (x, y, z) in the directions (ux, uy, uz) and (vx, vy, vz) using the material named mat
# sphere = x, y, z - r - mat                       declares a sphere centered in (x, y, z) of radius r using the material named mat
# box = ax, ay, az - bx, by, bz - mat              declares a box encompassing points (ax, ay, az) and (bx, by, bz) using the material named mat
# rotate = axis, angle - name                      rotates the named object along the (axis=x, y or z) axis with a certain angle
# translate = dx, dy, dz - name                    translates the named object
#
# scene specifications:
# name1, name2, [...]      adds objects name1, name2, [...] to the scene
# Note: emissive objects should be also added to the lights specification
#
# lights specifications:
# name1, name2, [...]      adds (hopefully emissive) objects name1, name2, [...] to the engine importance sampling system


material : red
lambertian = .65, .05, .05

material : white
lambertian = .73, .73, .73

material : green
lambertian = .12, .45, .15

material : blue
lambertian = .05, .05, .75

material : light
difflight = 24, 24, 24

material : metallic
metal = .6, .6, .05, .05

material : transp
dielectric = 1.5

material : iso
isotropic = 1, 2, 3

material : sphere_lamb
lambertian = .67, .67, .05

material : comp
composite = sphere_lamb - metallic - 0.4

object: left_wall
quad = 555,0,-805 - 0,0,1355 - 0,555,0 - green

object: right_wall
quad = 0,0,555 - 0,0,-1355 - 0,555,0 - red

#is indeed the ceiling
object: ceiling
quad = 0,555,-805 - 555,0,0 - 0,0,1355 - white

object: floor
quad = 0,0,555 - 555,0,0 - 0,0,-1355 - white

object: rear_wall
quad = 0,0,555 - 555,0,0 - 0,555,0 - white

# first dim is horizontal left
# second dim is vertical up
# third dim is away from camera
object: lid
quad = 0,0,-805 - 5,0,0 - 0,555,0 - white

object: source1
quad = 213,554,227 - 130,0,0 - 0,0,105 - light

object: ball
sphere = 190,90,190 - 90 - transp

object: box1
box = 0,0,0 - 165,330,165 - white

object: box1
rotate = y, 15 - box1

object: box1
translate = 265, 0, 295 - box1

scene:main
box1, left_wall, right_wall, ceiling, ball, source1, floor, rear_wall, lid

lights:main
source1, ball